= Introduction

This tutorial will have you deploying a Java app in minutes.

Hang on for a few more minutes to learn how it all works, so you can make the most out of Heroku.

The tutorial assumes that you have:
* a free Heroku account (https://signup.heroku.com/signup)
* Java 8 installed locally (http://www.oracle.com/technetwork/java/javase/downloads)
* Maven 3 installed locally (http://maven.apache.org/download.html)

If you’d prefer to use Gradle instead of Maven, please see the Getting Started with Gradle on Heroku guide.

= Set up

In this step you will install the Heroku Command Line Interface (CLI), formerly known as the Heroku Toolbelt. You will use the CLI to manage and scale your applications, to provision add-ons, to view the logs of your application as it runs on Heroku, as well as to help run your application locally.

Download the Heroku CLI for...
    https://devcenter.heroku.com/toolbelt-downloads/osx
    https://devcenter.heroku.com/toolbelt-downloads/windows32
    https://devcenter.heroku.com/toolbelt-downloads/windows64
    https://devcenter.heroku.com/toolbelt-downloads/debian
    https://devcenter.heroku.com/toolbelt-downloads/standalone

Once installed, you can use the heroku command from your command shell.
On Windows, start the Command Prompt (cmd.exe) or Powershell to access the command shell.

Log in using the email address and password you used when creating your Heroku account:

$ heroku login
Enter your Heroku credentials.
Email: java@example.com
Password:

Authenticating is required to allow both the heroku and git commands to operate.

Note that if you’re behind a firewall that requires use of a proxy to connect with external HTTP/HTTPS services, you can set the HTTP_PROXY or HTTPS_PROXY environment variables in your local development environment before running the heroku command.

= Prepare the app

In this step, you will prepare a simple application that can be deployed.

To clone the sample application so that you have a local version of the code that you can then deploy to Heroku, execute the following commands in your local command shell or terminal:

$ git clone https://github.com/heroku/java-getting-started.git
$ cd java-getting-started

You now have a functioning git repository that contains a simple application as well as a pom.xml file, which is used by Java’s dependency manager, Maven.

= Deploy the app

In this step you will deploy the app to Heroku.

Create an app on Heroku, which prepares Heroku to receive your source code:

$ heroku create

When you create an app, a git remote (called heroku) is also created and associated with your local git repository.

Heroku generates a random name (in this case warm-eyrie-9006) for your app, or you can pass a parameter to specify your own app name.

Now deploy your code:

$ git push heroku master

The application is now deployed. Ensure that at least one instance of the app is running:

$ heroku ps:scale web=1

Now visit the app at the URL generated by its app name. As a handy shortcut, you can open the website as follows:

$ heroku open

