1. Введение в JEE. Установка всех необходимых компонентов
Приложения промышленных масштабов. Многоуровневые приложения. Протоколы HTTP, TCP/IP. Клиентская сторона приложений HTML/CSS/JavaScript. Стандарт JEE, чем отличается от JSE, архитектура. Основные компоненты JEE (Servlets, JSP/JSF, JPA, EJB,…). Спецификации JSR и JCP. Сервер приложений. Описание и установка необходимого ПО (JDK8, Glassfish 4.0, Intellij idea, git, maven, postgreSql). Тестовый код, подключение к базе данных.

2. Сервлеты 
Описание сервлетов. Жизненный цикл сервлетов. Способы создания сервлетов. Чтение параметров из запроса. Сессия и куки. Скачивание и загрузка файлов. Многопоточность в сервлетах. Переадресация. Асинхронность выполнения. Слушатели и Фильтры. Авторизация пользователей

http://java-course.ru/student/book1/servlet/
http://javatutor.net/books/tiej/servlets

3. Java Server Pages
Описание JSP. Чтение параметров. Использование java-beans. Подключение сторонних ресурсов. Библиотека тэгов. Шаблонизация проекта. Sql тэги. Мультиязычность. Коды ошибок.

http://www.codenet.ru/webmast/java/jsp.php [!]
http://java-course.ru/student/book1/jsp/
http://orlova.rsue.ru/content/sst/j2ee2.htm
http://javatutor.net/books/tiej/jsp

4. Java Persistent API
Описание JPA. Описание ORM. Реализация Hibernate. Создание Entity. Проектирование DAO классов. Создание query. CriteriaAPI. NativeSQL. Транзакции. Миграция БД.

5. Проектирование “Интернет банка”
Описание архитектуры приложения. Описание интерфейсов и способа их реализации. Демонстрация клиентской стороны и способа взаимодействия с ней. Распределение работы.

6. SOAP веб-сервис
Описание web-сервисов. Описание Soap протокла. Wsdl. Jax-WS. Асинхронность вызова сервиса. Обработка ошибок. Ws-Policy. Клиент для Soap. Проектирование сервиса приема платежей.

7. REST веб-сервис
Описание Rest технологии. Отличая от Soap. Json объекты, конвертация Java объектов в Json. Переработка сервиса приема платежей, как rest сервис 

8. Клиентская сторона, тестирование 
Создание клиентской части с использованием AngularJs через Ajax-requests. Написание комплексных тестов. Mock-объекты. Подведение итогов. Рекомендуемая литература. Enterprise-фреймворк Spring.