Pondělí 21. ledna

- To-install: Eclipse for Java EE, MariaDB
- To-use: https://toggl.com
- To-explore: Trombon-core, Trombon-web-app
- To-solve: i18n in backend (Trombon-core)
  + https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#spring-core (1.15.1. Internationalization using MessageSource)
  + https://phraseapp.com/blog/posts/spring-boot-internationalization
  + use test method/service in AdminController.java
  + https://memorynotfound.com/spring-mvc-internationalization-i18n-example
  + added messageSource.setCacheSeconds(10) for updating resources
  + Preferences/General/Workspaces/Text file encoding (UTF-8)

Úterý 22. ledna

- To-resolve: why I see red lines in tests Trombon-web-app?
  + https://stackoverflow.com/questions/2555845/how-to-update-maven-repository-in-eclipse and https://stackoverflow.com/questions/4262186/missing-maven-dependencies-in-eclipse-project
- To-explore: testing in Spring
- To-explore: working with db in Trombon-core
  + packages domain, domain.specification, repositories, service.domain
  + play in AdminController.java
  + Spring Data based on JPA https://habr.com/ru/post/139421/

Středa 23. ledna

- To-explore: using AdminController.java to play with data...
- To-learn: using Specification interface for getting from Repository level and using Specifications static methods where(), or(), etc... to combine queries, https://www.baeldung.com/rest-api-search-language-spring-data-specifications
- To-do: writing own Specification, using interfaces Subquery<T>, Root<T> and Join<T1, T2> https://stackoverflow.com/questions/12061502/spring-data-subquery-within-a-specification and https://www.baeldung.com/spring-data-criteria-queries

Čtvrtek 24. ledna

- To-do: write specification getChildActivityFromActivityRunByParentActivity()
  + how to work Join<T1, T2>
  + https://docs.spring.io/spring-data/jpa/docs/1.11.18.RELEASE/reference/html (5.5. Specifications)

Pátek 25. ledna

- To-do: creating a training project Bookstore
  + introduction https://habr.com/ru/post/257223/
  + starting https://start.spring.io + Web, JPA
  + hello aplication https://spring.io/guides/gs/spring-boot
  + creating Bookstore-spring project (init)
  + work with MySQL https://spring.io/guides/gs/accessing-data-mysql/

Pondělí 28. ledna

- To-solve: SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data (when call getAllBooks() from DataController class) https://stackoverflow.com/questions/24994440/no-serializer-found-for-class-org-hibernate-proxy-pojo-javassist-javassist
  + solved: @ManyToOne(fetch=FetchType.EAGER) // not .LAZY
- To-learn: working with Specification (create my own)

Úterý 29. ledna

- To-solve: working with Specification, more precisely: why it not working?
  + solved: it was wrong name of field (author vs authorOfBook) in Book_.java
- To-learn: writing own Specification, using interfaces Subquery<T>, Root<T> and Join<T1, T2>
  + change type of field Genre (to ManyToMany)
  + about Join<T1, T2> https://stackoverflow.com/questions/38168108/spring-data-join-with-specifications

Středa 30. ledna

- To-solve: to write Specification<Book>: get all book by genre
  + relations between objects (OneToOne, OneToMany, ManyToMany) https://easyjava.ru/data/jpa/jpa-i-svyazi-mezhdu-obektami/
https://easyjava.ru/spring/spring-data-project/ispolzovanie-jpa-criteria-v-spring-data-jpa/
  + solved using Join<T1, T2>
- To-solve: to write Specification<Book>: get all books with author
  + solved using Join<T1, T2>

Čtvrtek 31. ledna

- To-solve:  to write Specification<Author>: get all authors of our books
  + improved a bit code of Author.java
  + https://stackoverflow.com/questions/48647847/jpa-specifications-by-example
  + solved using Join<T1, T2>
- To-solve: to write Specification<Genre>: to get all genres with define at least N book
  + solved using Join<T1, T2>

Pátek 1. února

- To-explore:  how to work with Subquery
  + https://thoughts-on-java.org/hibernate-tip-subquery-criteriaquery/

Pondělí 4. února

- To-solve: to write Specification<Genre>: to get all genres by author
  + solved using Subquery<F>, Root<T> and Join<T1, T2>